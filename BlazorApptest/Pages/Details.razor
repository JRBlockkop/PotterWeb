@page "/details/{id}"
@using System.Text.Json.Serialization
@inject HttpClient Http

<PageTitle>Details</PageTitle>


<NavLink class="nav-link" href="characters">@Zurueck</NavLink>
<MudCard>
    <MudCardHeader>
        <CardHeaderAvatar>
            <MudAvatar Color="@houseColor">@houseFstL</MudAvatar>
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText Typo="Typo.body1">@character.Attributes.Name</MudText>
            <MudText Typo="Typo.body2">@character.Attributes.Gender</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardMedia Image="@character.Attributes.Image" Height="200"/>
    <MudCardContent>
        <MudText Typo="Typo.body2">Was born in @character.Attributes.Born and died in @character.Attributes.Died</MudText>
    </MudCardContent>
    <MudCardActions>
        <MudIconButton Icon="@Icons.Material.Filled.Favorite" Color="@likecolor" @onclick="@(() => Like())" />
    </MudCardActions>
</MudCard>
    



@code {

    [Parameter]
    public string? id { get; set; }


    public string Zurueck = "<-";


    private CharacterData character = new CharacterData();

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();



        var result = await httpClient.GetFromJsonAsync<ApiData>($"https://api.potterdb.com/v1/characters/{id}");

        character = result.Data;

        HouseCheck();
    }
    public char houseFstL;

    public Color houseColor;


    public void HouseCheck()
    {


        if(character.Attributes.House == "Gryffindor")
        {
            houseFstL = 'G';
            houseColor = Color.Success;
        }
        else if (character.Attributes.House == "Hufflepuff")
        {
            houseFstL = 'H';
            houseColor = Color.Info;
        }
        else if (character.Attributes.House == "Ravenclaw")
        {
            houseFstL = 'R';
            houseColor = Color.Warning;
        }
        else if (character.Attributes.House == "Slytherin")
        {
            houseFstL = 'S';
            houseColor = Color.Error;
        }
        else
        {
            houseFstL = '?';
            houseColor = Color.Dark;
        }
    }

    public Color likecolor;
    public bool Liked = false;


    public void Like()
    {
        Liked = !Liked;
        if(Liked)
        {   
            likecolor = Color.Success;
        }
        if (!Liked )
        {
            likecolor = Color.Default;
        }
        
    }

    public string getNullTo(string input_1)
    {

        return input_1 ?? "Nicht vorhanden";
    }

    

    public class Character
    {
        public string Name { get; set; }

        public string Gender { get; set; }

        public string Patronus { get; set; }

        public string House { get; set; }

    }

    public class Attributes
    {
        [JsonPropertyName("slug")]
        public string Slug { get; set; }

        [JsonPropertyName("alias_names")]
        public List<string> AliasNames { get; set; }

        [JsonPropertyName("animagus")]
        public object Animagus { get; set; }

        [JsonPropertyName("blood_status")]
        public string BloodStatus { get; set; }

        [JsonPropertyName("boggart")]
        public string Boggart { get; set; }

        [JsonPropertyName("born")]
        public string Born { get; set; }

        [JsonPropertyName("died")]
        public string Died { get; set; }

        [JsonPropertyName("eye_color")]
        public string EyeColor { get; set; }

        [JsonPropertyName("family_members")]
        public List<string> FamilyMembers { get; set; }

        [JsonPropertyName("gender")]
        public string Gender { get; set; }

        [JsonPropertyName("hair_color")]
        public string HairColor { get; set; }

        [JsonPropertyName("height")]
        public string Height { get; set; }

        [JsonPropertyName("house")]
        public string House { get; set; }

        [JsonPropertyName("image")]
        public string Image { get; set; }

        [JsonPropertyName("jobs")]
        public List<string> Jobs { get; set; }

        [JsonPropertyName("marital_status")]
        public string MaritalStatus { get; set; }

        [JsonPropertyName("name")]
        public string Name { get; set; }

        [JsonPropertyName("nationality")]
        public string Nationality { get; set; }

        [JsonPropertyName("patronus")]
        public string Patronus { get; set; }

        [JsonPropertyName("romances")]
        public List<string> Romances { get; set; }

        [JsonPropertyName("skin_color")]
        public string SkinColor { get; set; }

        [JsonPropertyName("species")]
        public string Species { get; set; }

        [JsonPropertyName("titles")]
        public List<string> Titles { get; set; }

        [JsonPropertyName("wands")]
        public List<string> Wands { get; set; }

        [JsonPropertyName("weight")]
        public string Weight { get; set; }

        [JsonPropertyName("wiki")]
        public string Wiki { get; set; }
    }

    public class CharacterData
    {
        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("type")]
        public string Type { get; set; }

        [JsonPropertyName("attributes")]
        public Attributes Attributes { get; set; }

        [JsonPropertyName("links")]
        public Links Links { get; set; }
    }

    public class Links
    {
        [JsonPropertyName("self")]
        public string Self { get; set; }

        [JsonPropertyName("current")]
        public string Current { get; set; }

        [JsonPropertyName("first")]
        public string First { get; set; }

        [JsonPropertyName("prev")]
        public string Prev { get; set; }

        [JsonPropertyName("next")]
        public string Next { get; set; }

        [JsonPropertyName("last")]
        public string Last { get; set; }
    }

    public class Meta
    {
        [JsonPropertyName("pagination")]
        public Pagination Pagination { get; set; }

        [JsonPropertyName("copyright")]
        public string Copyright { get; set; }

        [JsonPropertyName("generated_at")]
        public DateTime GeneratedAt { get; set; }
    }

    public class Pagination
    {
        [JsonPropertyName("current")]
        public int Current { get; set; }

        [JsonPropertyName("first")]
        public int First { get; set; }

        [JsonPropertyName("prev")]
        public int Prev { get; set; }

        [JsonPropertyName("next")]
        public int Next { get; set; }

        [JsonPropertyName("last")]
        public int Last { get; set; }

        [JsonPropertyName("records")]
        public int Records { get; set; }
    }

    public class ApiData
    {
        [JsonPropertyName("data")]
        public CharacterData Data { get; set; }

        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }

        [JsonPropertyName("links")]
        public Links Links { get; set; }
    }

    
}
