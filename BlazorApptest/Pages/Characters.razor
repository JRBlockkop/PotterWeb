@page "/"
@page "/characters"
@using System.Text.Json.Serialization
@inject HttpClient Http
@inject NavigationManager NaviManager

<PageTitle>Characters</PageTitle>


<MudTable T="CharacterData" Items="characters" Dense="false" Hover="true" Bordered="false" Striped="false" Filter="new Func<CharacterData,bool>(FilterFunc1)" Height="615px" OnRowClick="@RowClicked">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Harry Potter Characters</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <ColGroup>
        <col style="width: 35%;" />
        <col style="width: 20%;" />
        <col  />
        <col style="width: 35%;" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Gender</MudTh>
        <MudTh>Patronus</MudTh>
        <MudTh>House</MudTh>
    </HeaderContent>
    <RowTemplate>
            <MudTd DataLabel="Name">@context.Attributes.Name</MudTd>
            <MudTd DataLabel="Gender">@context.Attributes.Gender</MudTd>
            <MudTd DataLabel="Patronus">@context.Attributes.Patronus</MudTd>
            <MudTd DataLabel="House">@context.Attributes.House</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>




@code {
    private string searchString1 = "";

    private List<CharacterData> characters = new List<CharacterData>();

    protected override async Task OnInitializedAsync()
    {
        var httpClient = new HttpClient();

        for (int i = 1; i <= 47; i++)
        {
            var result = await httpClient.GetFromJsonAsync<ApiData>($"https://api.potterdb.com/v1/characters?page[number]={i}");

            characters.AddRange(result.Data);
        }
        // characters = new List<Character>
        // {
        //     new Character{ Name = "Harry Potter", Gender = "Male", Patronus = "Hirsch", House = "Gryffindor"},
        //     new Character{ Name = "Ron Weasley", Gender = "Male", Patronus = "Dackel", House = "Gryffindor"}
        // };
    }

    public void RowClicked(TableRowClickEventArgs<CharacterData> p)
    {
        string id = p.Item.Id;

        NaviManager.NavigateTo($"/details/{id}");
    }

    public string getNullTo(string input_1)
    {

        return input_1 ?? "Nicht vorhanden";
    }

    private bool FilterFunc1(CharacterData element) => FilterFunc(element, searchString1);

    private bool FilterFunc(CharacterData element, string searchString)
    {
        if ($"{element.Attributes.Name} {element.Attributes.House}".Contains(searchString))
            return true;
        return false;
    }

    public class Character
    {
        public string Name { get; set; }

        public string Gender { get; set; }

        public string Patronus { get; set; }

        public string House { get; set; }

    }

    public class Attributes
    {
        [JsonPropertyName("slug")]
        public string Slug { get; set; }

        [JsonPropertyName("alias_names")]
        public List<string> AliasNames { get; set; }

        [JsonPropertyName("animagus")]
        public object Animagus { get; set; }

        [JsonPropertyName("blood_status")]
        public string BloodStatus { get; set; }

        [JsonPropertyName("boggart")]
        public string Boggart { get; set; }

        [JsonPropertyName("born")]
        public string Born { get; set; }

        [JsonPropertyName("died")]
        public string Died { get; set; }

        [JsonPropertyName("eye_color")]
        public string EyeColor { get; set; }

        [JsonPropertyName("family_members")]
        public List<string> FamilyMembers { get; set; }

        [JsonPropertyName("gender")]
        public string Gender { get; set; }

        [JsonPropertyName("hair_color")]
        public string HairColor { get; set; }

        [JsonPropertyName("height")]
        public string Height { get; set; }

        [JsonPropertyName("house")]
        public string House { get; set; }

        [JsonPropertyName("image")]
        public string Image { get; set; }

        [JsonPropertyName("jobs")]
        public List<string> Jobs { get; set; }

        [JsonPropertyName("marital_status")]
        public string MaritalStatus { get; set; }

        [JsonPropertyName("name")]
        public string Name { get; set; }

        [JsonPropertyName("nationality")]
        public string Nationality { get; set; }

        [JsonPropertyName("patronus")]
        public string Patronus { get; set; }

        [JsonPropertyName("romances")]
        public List<string> Romances { get; set; }

        [JsonPropertyName("skin_color")]
        public string SkinColor { get; set; }

        [JsonPropertyName("species")]
        public string Species { get; set; }

        [JsonPropertyName("titles")]
        public List<string> Titles { get; set; }

        [JsonPropertyName("wands")]
        public List<string> Wands { get; set; }

        [JsonPropertyName("weight")]
        public string Weight { get; set; }

        [JsonPropertyName("wiki")]
        public string Wiki { get; set; }
    }

    public class CharacterData
    {
        [JsonPropertyName("id")]
        public string Id { get; set; }

        [JsonPropertyName("type")]
        public string Type { get; set; }

        [JsonPropertyName("attributes")]
        public Attributes Attributes { get; set; }

        [JsonPropertyName("links")]
        public Links Links { get; set; }
    }

    public class Links
    {
        [JsonPropertyName("self")]
        public string Self { get; set; }

        [JsonPropertyName("current")]
        public string Current { get; set; }

        [JsonPropertyName("first")]
        public string First { get; set; }

        [JsonPropertyName("prev")]
        public string Prev { get; set; }

        [JsonPropertyName("next")]
        public string Next { get; set; }

        [JsonPropertyName("last")]
        public string Last { get; set; }
    }

    public class Meta
    {
        [JsonPropertyName("pagination")]
        public Pagination Pagination { get; set; }

        [JsonPropertyName("copyright")]
        public string Copyright { get; set; }

        [JsonPropertyName("generated_at")]
        public DateTime GeneratedAt { get; set; }
    }

    public class Pagination
    {
        [JsonPropertyName("current")]
        public int Current { get; set; }

        [JsonPropertyName("first")]
        public int First { get; set; }

        [JsonPropertyName("prev")]
        public int Prev { get; set; }

        [JsonPropertyName("next")]
        public int Next { get; set; }

        [JsonPropertyName("last")]
        public int Last { get; set; }

        [JsonPropertyName("records")]
        public int Records { get; set; }
    }

    public class ApiData
    {
        [JsonPropertyName("data")]
        public List<CharacterData> Data { get; set; }

        [JsonPropertyName("meta")]
        public Meta Meta { get; set; }

        [JsonPropertyName("links")]
        public Links Links { get; set; }
    }
}
